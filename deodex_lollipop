#!/bin/bash

# Do not edit this file unless you know what you are doing

romdir=$(pwd)
framedir=$(pwd)/system/framework
appdir=$(pwd)/system/app
privdir=$(pwd)/system/priv-app
tools=$(pwd)/tools
logs=$(pwd)/logs
oat2dex=$(ls $tools | grep oat2dex)

echo ""
echo "----------------------------------------------------"
echo "-                                                  -"
echo "-            Deodex Lollipop for Linux             -"
echo "-                    by SuperR                     -"
echo "-                                                  -"
echo "----------------------------------------------------"
sleep 2
clear

if [ $(java -version 2>&1 | sed 's/java version "\(.*\)\.\(.*\)\..*"/\1\2/; 1q') -lt "17" ]; then
	echo ""
	echo "MISSING DEPENDENCY:"
	echo "You need at least Java 7 to use this tool."
	read -p "Press ENTER to exit"
	exit
fi
if [ ! $(command -v 7za) ]; then
	echo ""
	echo "MISSING DEPENDENCY:"
	echo "You need p7zip-full (7za) to use this tool."
	read -p "Press ENTER to exit"
	exit
fi
if [ ! -d "$framedir" ]; then
	echo ""
	echo "MISSING FRAMEWORK:"
	echo "You must copy at least the framework directory from"
	echo "your ROM into the system directory located in the"
	echo "root of this tool."
	echo ""
	read -p "Press ENTER to Exit"
	exit
fi

if [[ -f $romdir/system/build.prop ]]; then
	api=""
	androidversion=$(cat $romdir/system/build.prop | grep "ro.build.version.release" | sed 's/ro\.build\.version\.release=//')
	if (( $(echo "$androidversion 5.1" | awk '{print ($1 >= $2)}') && $(echo "$androidversion 5.1.1" | awk '{print ($1 <= $2)}') )); then
		export api=22
	elif (( $(echo "$androidversion 5.0" | awk '{print ($1 >= $2)}') && $(echo "$androidversion 5.0.2" | awk '{print ($1 <= $2)}') )); then
		export api=21
	elif (( $(echo "$androidversion 4.4.4" | awk '{print ($1 <= $2)}') )); then		
		echo "Sorry, this tool only supports deodexing Lollipop."
		echo ""
		read -p "Press ENTER to exit"
		exit
	fi
else
	api=""
	while [[ $api -lt "21" || $api -gt "22" ]] ; do
		echo ""
		echo "Type the API level of the ROM and press ENTER."
		echo ""
		echo "HINT:"
		echo "5.0.x = 21"
		echo "5.1.x = 22"
		echo ""
		read api
		clear
	done
fi

arch=""
cd $framedir
arch=$(ls -d */ | sed 's/\///')

echo "ANDROID VERSION: $androidversion"
echo "API LEVEL: $api"
echo "ARCH: $arch" 
echo ""
read -n 1 -p "Would you like to deodex now? y/n  "
echo ""
echo ""
if [[ $REPLY = "y" ]]; then
	clear
else
	exit
fi

rm -rf $logs/*.log

echo ""
echo "----------------------------------------------------"
echo "Deoptimizing boot.oat ..."
echo "----------------------------------------------------"
echo ""

cd $tools
if [ ! -d "$framedir/$arch/odex" ]; then
	java -Xmx512m -jar $oat2dex boot $framedir/$arch/boot.oat >> $logs/main.log
fi
clear

echo ""
echo "----------------------------------------------------"
echo "Start deodexing /system/app ..."
echo "----------------------------------------------------"
echo ""

app=""
for app in $( ls $appdir ); do
	if [ -f "$appdir/$app/$arch/$app.odex.gz" ]; then
		cd $appdir/$app/$arch
		echo ""
		echo "... Extracting $app.odex.gz"
		echo ""
		7za e "$appdir/$app/$arch/$app.odex.gz" >> $logs/zip.log
	fi
done

cd $tools
app=""
for app in $( ls $appdir ); do
	if [[ $(7za l $appdir/$app/$app.apk | grep classes) = "" ]]; then
		if [ -d "$appdir/$app/$arch" ]; then
			echo ""
			echo "... Deodexing $app"
			echo ""
			java -Xmx512m -jar $oat2dex $appdir/$app/$arch/$app.odex $framedir/$arch/odex >> $logs/main.log
			mv $appdir/$app/$arch/$app.dex $appdir/$app/$arch/classes.dex
			if [ -f "$appdir/$app/$arch/$app-classes2.dex" ]; then
				mv $appdir/$app/$arch/$app-classes2.dex $appdir/$app/$arch/classes2.dex
			fi
			if [ -f "$appdir/$app/$arch/$app-classes3.dex" ]; then
				mv $appdir/$app/$arch/$app-classes3.dex $appdir/$app/$arch/classes3.dex
			fi
			7za u -tzip $appdir/$app/$app.apk $appdir/$app/$arch/classes*.dex >> $logs/zip.log
			rm -rf $appdir/$app/$arch
		else 
			echo ""
			echo "... $app is already deodexed"
			echo ""
		fi
	else
		echo ""
		echo "$app is already deodexed"
		echo ""
		rm -rf $appdir/$app/$arch
	fi
done
clear

echo ""
echo "----------------------------------------------------"
echo "Start deodexing /system/priv-app ..."
echo "----------------------------------------------------"
echo ""

privapp=""
for privapp in $( ls $privdir ); do
	if [ -f "$privdir/$privapp/$arch/$privapp.odex.gz" ]; then
		cd $privdir/$privapp/$arch
		echo ""
		echo "... Extracting $privapp.odex.gz"
		echo ""
		7za e "$privdir/$privapp/$arch/$privapp.odex.gz" >> $logs/zip.log
	fi
done

cd $tools
privapp=""
for privapp in $( ls $privdir ); do
	if [[ $(7za l $privdir/$privapp/$privapp.apk | grep classes) = "" ]]; then
		if [ -d "$privdir/$privapp/$arch" ]; then
			echo ""
			echo "... Deodexing $privapp"
			echo ""
			java -Xmx512m -jar $oat2dex $privdir/$privapp/$arch/$privapp.odex $framedir/$arch/odex >> $logs/main.log
			mv $privdir/$privapp/$arch/$privapp.dex $privdir/$privapp/$arch/classes.dex
			if [ -f "$privdir/$privapp/$arch/$privapp-classes2.dex" ]; then
				mv $privdir/$privapp/$arch/$privapp-classes2.dex $privdir/$privapp/$arch/classes2.dex
			fi
			if [ -f "$privdir/$privapp/$arch/$privapp-classes3.dex" ]; then
				mv $privdir/$privapp/$arch/$privapp-classes3.dex $privdir/$privapp/$arch/classes3.dex
			fi
			7za u -tzip $privdir/$privapp/$privapp.apk $privdir/$privapp/$arch/classes*.dex >> $logs/zip.log
			rm -rf $privdir/$privapp/$arch
		else 
			echo ""
			echo "... $privapp is already deodexed"
			echo ""
		fi
	else
		echo ""
		echo "$privapp is already deodexed"
		echo ""
		rm -rf $privdir/$privapp/$arch
	fi
done
clear

echo ""
echo "----------------------------------------------------"
echo "Start deodexing /system/framework ..."
echo "----------------------------------------------------"
echo ""

for frame in $( ls $framedir/$arch | grep .odex | rev | cut -c 6- | rev ); do
	if [[ $(7za l $framedir/$frame.jar | grep classes) = "" ]]; then
		echo ""
		echo "... Deodexing $frame"
		echo ""
		java -Xmx512m -jar $oat2dex $framedir/$arch/$frame.odex $framedir/$arch/odex >> $logs/main.log
		mv $framedir/$arch/$frame.dex $framedir/$arch/classes.dex
		if [ -f "$framedir/$arch/$frame-classes2.dex" ]; then
			mv $framedir/$arch/$frame-classes2.dex $framedir/$arch/classes2.dex
		fi
		if [ -f "$framedir/$arch/$frame-classes3.dex" ]; then
			mv $framedir/$arch/$frame-classes3.dex $framedir/$arch/classes3.dex
		fi
		if [[ ! -f $framedir/$frame.apk ]]; then
			7za u -tzip $framedir/$frame.jar $framedir/$arch/classes*.dex >> $logs/zip.log
		else
			7za u -tzip $framedir/$frame.apk $framedir/$archthey/classes*.dex >> $logs/zip.log
		fi
		rm -rf $framedir/$arch/classes*.dex
	else
		echo ""
		echo "$frame is already deodexed"
		echo ""
		rm -rf $framedir/$arch/$frame.odex
	fi
done
for frame2 in $( ls $framedir/$arch/dex | grep .dex | rev | cut -c 5- | rev ); do
	if [[ $(7za l $framedir/$frame2.jar | grep classes) = "" ]]; then
		if [[ $frame2 != *"classes"* ]]; then
			echo ""
			echo "... Deodexing $frame2"
			echo ""
			mv $framedir/$arch/dex/$frame2.dex $framedir/$arch/dex/classes.dex
			if [ -f "$framedir/$arch/dex/$frame2-classes2.dex" ]; then
				mv $framedir/$arch/dex/$frame2-classes2.dex $framedir/$arch/dex/classes2.dex
			fi
			if [ -f "$framedir/$arch/dex/$frame2-classes3.dex" ]; then
				mv $framedir/$arch/dex/$frame2-classes3.dex $framedir/$arch/dex/classes3.dex
			fi
			if [[ $(ls $framedir | grep $frame2.apk) = "" ]]; then
				7za u -tzip $framedir/$frame2.jar $framedir/$arch/dex/classes*.dex >> $logs/zip.log
			else
				7za u -tzip $framedir/$frame2.apk $framedir/$arch/dex/classes*.dex >> $logs/zip.log
			fi
			rm -rf $framedir/$arch/dex/classes*.dex
		fi
	else
		if [[ $frame2 != *"classes"* ]]; then
			echo ""
			echo "$frame2 is already deodexed"
			echo ""
			rm -rf $framedir/$arch/dex/$frame2.dex
		fi
	fi
done
clear

echo ""
echo "----------------------------------------------------"
echo "Cleaning up ..."
echo "----------------------------------------------------"
echo ""
echo ""
rm -rf $framedir/$arch
clear
echo ""
echo "----------------------------------------------------"
echo "Deodexing complete"
echo "----------------------------------------------------"
echo ""
echo ""
echo ""
echo "              -----------------------"
echo "              - Press ENTER to exit -"
echo "              -----------------------"
read -p ""
